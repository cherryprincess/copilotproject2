name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      build_tag: ${{ steps.build_tag.outputs.BUILD_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Build backend Docker image
        run: docker build --no-cache -t travel-agency-backend .
        working-directory: ./backend

      - name: Build frontend Docker image
        run: docker build --no-cache -t travel-agency-frontend .
        working-directory: ./frontend

      - name: Run backend tests
        run: |
          npm install
          # Add test command if available
        working-directory: ./backend

      - name: Run frontend tests
        run: |
          npm install
          npm run build
          # Add test command if available
        working-directory: ./frontend

      - name: Install Trivy
        run: |
          sudo apt-get update && \
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release && \
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add - && \
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list && \
          sudo apt-get update && \
          sudo apt-get install -y trivy

      - name: Scan backend Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: travel-agency-backend
          format: table
          exit-code: 0
          ignore-unfixed: true

      - name: Scan frontend Docker image for vulnerabilities        
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: travel-agency-frontend
          format: table
          exit-code: 0
          ignore-unfixed: true

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set build tag
        id: build_tag
        run: echo "BUILD_TAG=$(echo $GITHUB_RUN_NUMBER)" >> $GITHUB_ENV && echo "::set-output name=BUILD_TAG::$GITHUB_RUN_NUMBER"

      - name: Tag and push backend image to ACR
        run: |
          docker tag travel-agency-backend ${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-backend:${{ env.BUILD_TAG }}
          az acr login --name ${{ secrets.ACR_NAME }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-backend:${{ env.BUILD_TAG }}

      - name: Tag and push frontend image to ACR
        run: |
          docker tag travel-agency-frontend ${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-frontend:${{ env.BUILD_TAG }}
          az acr login --name ${{ secrets.ACR_NAME }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-frontend:${{ env.BUILD_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}

      - name: Deploy frontend to AKS
        run: kubectl apply -f k8s/frontend-deployment.yaml

      - name: Deploy backend to AKS
        run: kubectl apply -f k8s/backend-deployment.yaml

      - name: Update frontend image in AKS
        run: |
          kubectl set image deployment/travel-agency-frontend travel-agency-frontend=${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-frontend:${{ needs.build-and-push.outputs.build_tag }}

      - name: Update backend image in AKS
        run: |
          kubectl set image deployment/travel-agency-backend travel-agency-backend=${{ secrets.ACR_NAME }}.azurecr.io/travel-agency-backend:${{ needs.build-and-push.outputs.build_tag }}
